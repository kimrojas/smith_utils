#!/usr/bin/env python3
# Author: Kurt Irvin Rojas
# https://github.com/kimrojas/smith_utils
import sys, os, subprocess
sys.dont_write_bytecode = True
from smith_user_parse import user
import smith_check


# Check connection
method = smith_check.check()
if method == 'UseLocal': bashCommand = f"ssh -Y {user['smith_username']}@{user['smith_ip']}"
if method == 'UseGlobal': bashCommand = f"ssh -Y {user['smith_username']}@localhost -p {user['smith_univ_port']}"

# Setup and run ssh query command
lookCommand = "qstat -f"
fullCommand = f"{bashCommand} '{lookCommand}'"
process = subprocess.Popen(fullCommand, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
output, error = process.communicate()
output = (output.decode('ascii')).splitlines()

# Trim output
okay = []
for line in output:
    cond1 = '   0/0/' in line
    cond2 = '-NA-' not in line
    if cond1 and cond2: okay.append(line.split())
okay

# Show output
outlines = []
outlines.append("RESOURCE AVAILABILITY")
outlines.append(f"{'-'*53}")
if len(okay) == 0: 
    outlines.append("No resources available at this moment, try again later.")
else:
    outlines.append(f"{'NODE':<15}{'CAPACITY':<12}{'LOAD':<8}")
    for line in okay:
        outlines.append(f"{line[0]:<15}{line[2]:<12}{line[3]:<8}")

for line in outlines:
    print(line)
    



