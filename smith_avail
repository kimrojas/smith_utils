#!/usr/bin/env python3
# Author: Kurt Irvin Rojas
# https://github.com/kimrojas/smith_utils
import sys, os, subprocess
sys.dont_write_bytecode = True
from smith_user_parse import user
import smith_check


# Check connection
method = smith_check.check()
if method == 'UseLocal': bashCommand = f"ssh -Y {user['smith_username']}@{user['smith_ip']}"
if method == 'UseGlobal': bashCommand = f"ssh -Y {user['smith_username']}@localhost -p {user['smith_univ_port']}"

# Setup and run ssh query command
lookCommand = "qstat -f"
fullCommand = f"{bashCommand} '{lookCommand}'"
process = subprocess.Popen(fullCommand, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
output, error = process.communicate()
output = (output.decode('ascii')).splitlines()

# Trim output
okay = []
for line in output:
    cond1 = '   0/0/' in line
    cond2 = '-NA-' not in line
    if cond1 and cond2: okay.append(line.split())
okay

# Show output
def see_capacity(cap):
    b = cap.split('/')
    return f"{b[0]}/{b[1]}/ {b[2]}"

class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'
    
def colored( a):
    return bcolors.OKGREEN + a + bcolors.ENDC

outlines = []
outlines.append(colored("RESOURCE AVAILABILITY"))
outlines.append(colored(f"{'-'*53}"))
if len(okay) == 0: 
    outlines.append(bcolors.WARNING+"No resources available at this moment, try again later."+bcolors.ENDC)
else:
    outlines.append(bcolors.BOLD+f"{'QUEUE':^10}{'NODE':^10}{'CAPACITY':^10}{'LOAD':^8}"+bcolors.ENDC)
    b4queue = ""
    init = 1
    for line in okay:

        queue,node = line[0].split('@')[0], line[0].split('@')[-1]
        if b4queue != queue:
            if init != 1: outlines.append(f"{'-':^10}{'-':^10}{'-':^10}{'-':^8}")
            b4queue = queue
            init = 2
        else:
            queue = ""
        capacity = line[2].split('/')[-1]
        load = line[3]
        queue = bcolors.OKBLUE + queue + bcolors.ENDC
        outlines.append(f"{queue:^19}{node:^10}{capacity:^10}{load:^8}")
outlines.append(colored(f"{'-'*53}"))
for line in outlines:
    print(line)
    



